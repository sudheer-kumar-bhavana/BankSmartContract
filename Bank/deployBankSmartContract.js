const Web3 = require('web3');
require('dotenv').config();

const infuraUrl = process.env.INFURA_PROVIDER_URL;
const web3 = new Web3(infuraUrl);

const account1 = '0xB33aec9BccD595BC3D2577b7d4c00a834F03f71f';
const privateKey = process.env.PRIVATE_KEY;

//bytecode after compilation
const data = '0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610cf0806100606000396000f3fe6080604052600436106100705760003560e01c8063b69ef8a81161004e578063b69ef8a8146100e0578063bfc649901461010b578063d0e30db014610134578063e3d670d71461013e57610070565b806301e1d114146100755780632e1a7d4d146100a0578063853828b6146100c9575b600080fd5b34801561008157600080fd5b5061008a61017b565b6040516100979190610a50565b60405180910390f35b3480156100ac57600080fd5b506100c760048036038101906100c29190610908565b610214565b005b3480156100d557600080fd5b506100de6103d1565b005b3480156100ec57600080fd5b506100f5610578565b6040516101029190610a50565b60405180910390f35b34801561011757600080fd5b50610132600480360381019061012d91906108c8565b6105bf565b005b61013c6106f1565b005b34801561014a57600080fd5b506101656004803603810190610160919061089b565b610762565b6040516101729190610a50565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461020c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020390610a30565b60405180910390fd5b600254905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028d906109d0565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115610318576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030f90610a10565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561035e573d6000803e3d6000fd5b5080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103ae9190610ad2565b9250508190555080600260008282546103c79190610ad2565b9250508190555050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610453576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044a906109d0565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501580156104d8573d6000803e3d6000fd5b50600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546002600082825461052a9190610ad2565b925050819055506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610641576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063890610a10565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106909190610ad2565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106e69190610a7c565b925050819055505050565b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107409190610a7c565b9250508190555034600260008282546107599190610a7c565b92505081905550565b6000818073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107ea575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610829576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610820906109f0565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b60008135905061088081610c8c565b92915050565b60008135905061089581610ca3565b92915050565b6000602082840312156108b1576108b0610b71565b5b60006108bf84828501610871565b91505092915050565b600080604083850312156108df576108de610b71565b5b60006108ed85828601610871565b92505060206108fe85828601610886565b9150509250929050565b60006020828403121561091e5761091d610b71565b5b600061092c84828501610886565b91505092915050565b6000610942602183610a6b565b915061094d82610b76565b604082019050919050565b6000610965603483610a6b565b915061097082610bc5565b604082019050919050565b6000610988600b83610a6b565b915061099382610c14565b602082019050919050565b60006109ab602183610a6b565b91506109b682610c3d565b604082019050919050565b6109ca81610b38565b82525050565b600060208201905081810360008301526109e981610935565b9050919050565b60006020820190508181036000830152610a0981610958565b9050919050565b60006020820190508181036000830152610a298161097b565b9050919050565b60006020820190508181036000830152610a498161099e565b9050919050565b6000602082019050610a6560008301846109c1565b92915050565b600082825260208201905092915050565b6000610a8782610b38565b9150610a9283610b38565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ac757610ac6610b42565b5b828201905092915050565b6000610add82610b38565b9150610ae883610b38565b925082821015610afb57610afa610b42565b5b828203905092915050565b6000610b1182610b18565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4e6f2066756e647320617661696c61626c6520696e20746865206163636f756e60008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79204f776e6572206f722061646d696e2063616e20636865636b206f7460008201527f686572206163636f756e74732062616c616e6365000000000000000000000000602082015250565b7f4c6f772062616c616e6365000000000000000000000000000000000000000000600082015250565b7f4f6e6c792061646d696e2063616e20636865636b20746f74616c20417373657460008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b610c9581610b06565b8114610ca057600080fd5b50565b610cac81610b38565b8114610cb757600080fd5b5056fea2646970667358221220a1dcfe9370ec017cebd959840e24ddbc9b8d84296839f5abd78853665ca2c84b64736f6c63430008070033';

web3.eth.getTransactionCount(account1, (err, txCount) => {

    const txObject = {
        nonce: txCount,
        from: account1,
        gas: '2000000',
        data: data
    };
    
    web3.eth.accounts.signTransaction(txObject, privateKey).then((signedTx)=>{
        //console.log(signedTx.rawTransaction);
        web3.eth.sendSignedTransaction(signedTx.rawTransaction)
        .on("receipt", receipt => {
            console.log(receipt);
        })
        .on("error", err => {
            console.log(err);
        });
    });

});